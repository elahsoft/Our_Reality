import unittest
from model_evaluation.evaluate_model import EvaluateModel
class TestEvaluateModel(unittest.TestCase):
    '''
    A simple Test Class for the EvaluateModel  Class
    Attributes:
              
                
    Methods:
        setUp(): Does the initialization of attributes needed for running 
        the test.
               
    '''
    def setUp(self):
        '''
        Sets up the test via creating objects and variables needed
        for the running of the test
        '''
        self.evaluate_model = EvaluateModel("train.csv", "ideal.csv", "test.csv") 
        self.selected_ideal_dataset = self.evaluate_model.extract_selected_ideal_data()
        self.evaluate_model.compute_train_devia_from_ideal()
        self.evaluate_model.determine_max_deviation()
        self.evaluate_model.map_ideal()
        self.evaluate_model.construct_mapping_df()
        #self.evaluate_model.construct_mapping_df()
    def test_extract_selected_ideal_data(self):
        '''
        Tests the extract_selected_ideal_data function
        '''
        #test data equivalent dataset for selected ideal
        #functions
        selected_ideal_data = [[32.0, 1.0, 26.0, 16.756802], 
                                [768.32, 510.76, 394.16, 384.84195], 
                                [103.68, 17.64, 61.84, 51.046333], 
                                [426.32, 134.56, 223.16, 212.26521], 
                                [605.52, 207.36, 312.76, 303.75266], 
                                [208.08, 51.84, 114.04, 104.739876], 
                                [492.98, 349.69, 256.49, 246.49797], 
                                [67.28, 77.44, 43.64, 33.175396], 
                                [669.78, 234.09, 344.89, 335.41232], 
                                [46.08, 3.24, 33.04, 24.036165], 
                                [714.42, 252.81, 367.21, 357.15958], 
                                [7.22, 24.01, 13.61, 4.5563], 
                                [64.98, 75.69, 42.49, 31.939314], 
                                [662.48, 231.04, 341.24, 331.84482], 
                                [165.62, 37.21, 92.81, 82.4909], 
                                [1.62, 15.21, 10.81, 1.5933269], 
                                [0.72, 5.76, 10.36, -0.20464247], 
                                [468.18, 334.89, 244.09, 234.48674], 
                                [353.78, 106.09, 186.89, 176.22043], 
                                [626.58, 216.09, 323.29, 314.20258], 
                                [212.18, 176.89, 116.09, 105.32231], 
                                [0.08, 7.84, 10.04, -0.15866934], 
                                [25.92, 43.56, 22.96, 12.51748], 
                                [33.62, 50.41, 26.81, 15.991723], 
                                [158.42, 34.81, 89.21, 78.70898], 
                                [30.42, 0.81, 25.21, 15.897766], 
                                [474.32, 153.76, 247.16, 236.85689], 
                                [5.12, 1.96, 12.56, 1.5604264], 
                                [42.32, 57.76, 31.16, 20.16631], 
                                [343.22, 102.01, 181.61, 171.10133], 
                                [32.0, 49.0, 26.0, 15.243197], 
                                [158.42, 34.81, 89.21, 78.70898], 
                                [512.0, 361.0, 266.0, 255.7121], 
                                [283.22, 79.21, 151.61, 142.22813], 
                                [605.52, 416.16, 312.76, 301.76733], 
                                [426.32, 134.56, 223.16, 212.26521], 
                                [36.98, 1.69, 28.49, 19.406166], 
                                [58.32, 5.76, 39.16, 29.932764], 
                                [67.28, 77.44, 43.64, 33.175396], 
                                [302.58, 234.09, 161.29, 151.02676], 
                                [36.98, 53.29, 28.49, 17.573833], 
                                [0.98, 5.29, 10.49, -0.15421769], 
                                [288.0, 225.0, 154.0, 143.46342], 
                                [19.22, 37.21, 19.61, 9.651581], 
                                [151.38, 136.89, 85.69, 76.35297], 
                                [524.88, 368.64, 272.44, 261.9676], 
                                [584.82, 198.81, 302.41, 293.39407], 
                                [669.78, 453.69, 344.89, 334.3677], 
                                [38.72, 54.76, 29.36, 18.408398], 
                                [420.5, 132.25, 220.25, 209.31511], 
                                [109.52, 19.36, 64.76, 53.861294], 
                                [571.22, 193.21, 295.61, 286.53912], 
                                [131.22, 123.21, 75.61, 66.57989], 
                                [737.28, 492.84, 378.64, 368.9833], 
                                [392.0, 289.0, 206.0, 196.9906], 
                                [13.52, 31.36, 16.76, 7.2755013], 
                                [0.18, 7.29, 10.09, -0.20552021], 
                                [369.92, 275.56, 194.96, 185.81917], 
                                [312.5, 90.25, 166.25, 156.31631], 
                                [369.92, 112.36, 194.96, 184.10085], 
                                [27.38, 44.89, 23.69, 13.160164], 
                                [760.5, 272.25, 390.25, 379.64447], 
                                [224.72, 184.96, 122.36, 111.437225], 
                                [480.5, 156.25, 250.25, 240.04353], 
                                [158.42, 34.81, 89.21, 78.70898], 
                                [46.08, 60.84, 33.04, 22.043835], 
                                [662.48, 449.44, 341.24, 330.63516], 
                                [524.88, 368.64, 272.44, 261.9676], 
                                [640.82, 222.01, 330.41, 321.22314], 
                                [162.0, 36.0, 91.0, 80.58788], 
                                [332.82, 98.01, 176.41, 166.08252],
                                [8.0, 1.0, 14.0, 3.0907025], 
                                [5.78, 22.09, 12.89, 3.8816648], 
                                [760.5, 272.25, 390.25, 379.64447], 
                                [21.78, 0.09, 20.89, 11.047746], 
                                [283.22, 79.21, 151.61, 142.22813], 
                                [208.08, 174.24, 114.04, 103.340126], 
                                [531.38, 372.49, 275.69, 265.13196], 
                                [752.72, 501.76, 386.36, 376.88306], 
                                [19.22, 0.01, 19.61, 9.568419], 
                                [255.38, 68.89, 137.69, 128.64401], 
                                [737.28, 262.44, 378.64, 368.2967], 
                                [54.08, 67.24, 37.04, 26.156546], 
                                [18.0, 5.836308500000001e-26, 19.0, 8.85888], 
                                [0.72, 5.76, 10.36, -0.20464247], 
                                [121.68, 23.04, 70.84, 59.841457], 
                                [626.58, 216.09, 323.29, 314.20258], 
                                [369.92, 112.36, 194.96, 184.10085], 
                                [74.42, 9.61, 47.21, 37.392162], 
                                [0.98, 13.69, 10.49, 1.1342177], 
                                [677.12, 237.16, 348.56, 338.99457], 
                                [121.68, 116.64, 70.84, 61.838543], 
                                [3.92, 2.56, 11.96, 0.97455025], 
                                [444.02, 141.61, 232.01, 221.28712], 
                                [474.32, 153.76, 247.16, 236.85689], 
                                [237.62, 193.21, 128.81, 117.81456], 
                                [7.22, 1.21, 13.61, 2.6636999], 
                                [760.5, 506.25, 390.25, 380.85553], 
                                [438.08, 316.84, 229.04, 219.82825], 
                                [288.0, 225.0, 154.0, 143.46342]]
        self.assertEqual(selected_ideal_data, self.selected_ideal_dataset, 
                         "The extracted selected ideal functions dataset equivalence "+
                         " of the test data is not correct!")
    def test_compute_test_devia_from_ideal(self):
        '''
        Test the compute_test_devia_from_ideal method
        '''
        ideal_test_devia_list = [[958.2633366949094, 0.0019510949094400068, 622.7933910949093, 246.8867666571086], 
                                 [19997520.232765697, 22367401.23990969, 23483897.240749694, 23574294.955900565], 
                                 [10325.955100877167, 242.63379473316624, 3573.254675853167, 2399.338188048384], 
                                 [220360.92908086893, 31565.267962468897, 70897.6732864689, 65214.54172310439], 
                                 [368130.02537398465, 43504.44681636874, 98581.67979640873, 93006.61325164266], 
                                 [42555.74679062008, 2505.0468244760723, 12600.161908796072, 10598.768141021632], 
                                 [11507733.213024998, 12500432.004025, 13168153.152025001, 13240771.04969622], 
                                 [4400.783420701441, 5852.00532495744, 1823.1534308774408, 1039.0176561436904], 
                                 [446150.6723775144, 53942.4369572305, 117686.80973211047, 111273.90300628365], 
                                 [27553404.600475695, 27105494.090659693, 27416677.235179693, 27322468.456785727], 
                                 [510523.0676760081, 63957.88883789247, 134908.53308832124, 127626.52620988058], 
                                 [65.61176257183743, 619.5175160758374, 209.96325303583743, 29.55454064071745], 
                                 [4065.6636879307607, 5546.1617610127605, 1703.4239695727604, 943.8333638850153], 
                                 [3289577.69919249, 1910696.0632084897, 2227494.46092849, 2199538.5069961743], 
                                 [27610.658939553094, 1425.4063326370947, 8715.072715197095, 6894.8865877719345], 
                                 [3.38018079431824, 138.09712237031826, 54.04415821031825, 3.47897066696001], 
                                 [1.4489024529492498, 38.983835144149246, 117.58590863214924, 0.07787513660176888], 
                                 [219312.5856320447, 112237.2053801405, 59642.53726555651, 55044.17780880459], 
                                 [124860.58045304556, 11165.338757598985, 34769.63127531098, 30904.443365595333], 
                                 [4088987.8979251604, 5917613.792133159, 5407553.06189316, 5449899.68138408], 
                                 [791566.44588004, 855606.8700960402, 971782.31841604, 993127.6281212522], 
                                 [44029362.58890624, 43926440.42850624, 43897283.37750624, 44032530.00878024], 
                                 [645.886222612689, 1853.6720337886889, 504.195215748689, 144.2826593729209], 
                                 [1108.267890098569, 2508.072275664569, 701.2252322245693, 245.31016919173248], 
                                 [762682.93181584, 562060.88573184, 646588.38909184, 629810.7689341924], 
                                 [807.7963732853776, 1.41191714937744, 538.7857465893775, 193.19678966581503], 
                                 [224544.63334729098, 23501.321486292545, 60861.58437366854, 55884.154975795114], 
                                 [127.22973710745602, 65.928163987456, 350.4240231874561, 59.59905465779775], 
                                 [3483.1809815104007, 1899.0839191104005, 4925.0190551104015, 6588.921182508901], 
                                 [6785728.5542376125, 5587234.1680356115, 5969876.637555611, 5918634.707204825], 
                                 [1101.9930788702172, 2519.666636270217, 739.6377056702172, 270.2564402003796], 
                                 [761025.40400329, 560638.0933092901, 645062.2910692901, 628304.6123486225], 
                                 [262141.83185907512, 130319.4712925841, 70754.8735851891, 65387.5952373474], 
                                 [3925080.9284148905, 3158339.2512808903, 3420915.4734408897, 3386298.610435429], 
                                 [367002.9937085276, 173428.70355983006, 97998.87504728603, 91237.25327883131], 
                                 [181922.9961827184, 18161.4221445136, 49891.61977964159, 45143.3014928758], 
                                 [1292.8966152588864, 0.44471773088655986, 754.4290354908865, 337.93607140301367], 
                                 [48612.2373601489, 28197.7409905489, 40530.479234548904, 36900.33304402484], 
                                 [16619678.572176002, 16702620.829456, 16427489.911055999, 16342771.580915404], 
                                 [30595218.84573025, 31357586.446440246, 32178214.90964025, 32294758.43602311], 
                                 [1384.6050783332619, 2864.420573585062, 824.854591841062, 316.98650701631976], 
                                 [19847990.85575056, 19809606.397442557, 19763345.13408256, 19858098.267716624], 
                                 [82373.46629714241, 50179.4859037424, 23411.381015942407, 20298.043085888166], 
                                 [348.96242898340313, 1344.7282178614032, 363.68534714140316, 83.03067804411242], 
                                 [267361.33319300244, 282555.98044400243, 339609.1593240024, 350578.8337251203], 
                                 [14015117.480328998, 15209352.606889, 15968951.077688998, 16052758.620192358], 
                                 [400799.744671001, 61047.2761816009, 122974.68796560093, 116732.6079151716], 
                                 [4886356.670610249, 3977713.1308202497, 3555564.67002025, 3515993.2596432394], 
                                 [1666.938534666754, 3233.987462554754, 990.2450056747539, 420.9290947210035], 
                                 [214578.54386582272, 30616.68246482276, 69156.49964882275, 63524.83908532634], 
                                 [12069.73324490884, 388.1821108448413, 4238.314374004842, 2938.033689469245], 
                                 [326332.8135701609, 37343.8122050135, 87406.24474158949, 82124.99641888248], 
                                 [11217.771159440399, 9585.189299840398, 2530.4904038403997, 1703.5323447769001], 
                                 [544342.6695895022, 243399.9635096653, 143759.13459624132, 136529.5984688173], 
                                 [152117.78475385366, 82382.08789205366, 41625.30304225368, 38030.22629656804], 
                                 [160.47913001663875, 930.7402459334387, 253.0656017414388, 41.261828361193444], 
                                 [5464497.185976961, 5431306.69066896, 5418263.638828959, 5466299.739044052], 
                                 [137963.03881060513, 76769.86903468512, 38601.93876148512, 35093.62703705076], 
                                 [120414.29736026269, 15564.466991762689, 40303.627207762685, 36413.77722206724], 
                                 [137047.08855063136, 12687.480105587352, 38118.15581532735, 33995.82397115127], 
                                 [671.59240801, 70.64570600999996, 876.4619460099998, 1610.8130877240958], 
                                 [578218.5976092677, 74069.35818958507, 152222.37790596506, 144059.21453769293], 
                                 [956152.87786249, 1035490.83272649, 1166811.9483664902, 1190528.615326576], 
                                 [274671.3322573578, 39936.40849435776, 86342.50859835776, 80448.52278302216], 
                                 [762874.37495824, 562225.2335622401, 646764.66140224, 629984.7394210084], 
                                 [4633.695076562501, 2842.0893765625, 6579.034876562502, 8483.775897982225], 
                                 [365900.7362885224, 153552.13886100246, 80461.46043940242, 74557.64263542212], 
                                 [276539.262737157, 136626.341002893, 74763.96793507301, 69146.70231658938], 
                                 [3156438.319114239, 4819986.651630239, 4355764.345390241, 4394195.557316995], 
                                 [809938.1531806096, 599022.8119006096, 687184.0323006096, 670029.8651043904], 
                                 [6206164.632306251, 5091374.806056251, 5451326.06205625, 5403207.3633792], 
                                 [51.81781586184893, 0.039386081848932886, 174.19932710184895, 5.240261609229532], 
                                 [56.268331493284, 566.974293133284, 213.48780833328405, 31.392340493614242], 
                                 [578430.9586553139, 74145.37674921844, 152331.34764511042, 144165.2227113904], 
                                 [440.53654934508177, 0.4914534922817536, 403.9682959882818, 105.20007048477727], 
                                 [79762.09649976676, 6148.416871738754, 22744.21150645876, 20002.436810204817], 
                                 [30451.59924894596, 19786.32319806596, 6474.433731665956, 4867.014579776064], 
                                 [901391.8803555599, 1228343.5196035597, 1452281.9173635596, 1477840.5169463295], 
                                 [565676.5854345725, 251156.07562954846, 148806.72112978846, 141584.9844284623], 
                                 [327.37668187607295, 1.2464525640729602, 341.64175368407297, 71.26690137915075], 
                                 [81971.87003329, 9963.493379290001, 28431.79385929, 25463.002975116102], 
                                 [542357.503275287, 68439.40162147097, 142739.83218135097, 135031.22712865056], 
                                 [2847.3961449087024, 4425.043221480702, 1319.2149211407025, 647.0686625582169], 
                                 [295.8403010000765, 0.6399860000765626, 331.2403185000765, 64.94568788487655], 
                                 [2519437.48125696, 2535462.60074496, 2550133.0458649597, 2516503.015056518], 
                                 [18441467.688609, 17604007.578369, 18007402.581168998, 17914178.628714006], 
                                 [11479815.89043129, 8866683.592585292, 9516593.81946529, 9460608.87855368], 
                                 [136951.35789281176, 12658.364199535754, 38067.676426995764, 33948.153169485544], 
                                 [8467.051362962724, 740.1981041227241, 4199.893070522725, 3023.7619666975356], 
                                 [210715.51821376, 222545.79810575998, 219536.85346575998, 210857.12544263003], 
                                 [47962744.164196, 42062410.686916, 43519802.07811601, 43393688.172166646], 
                                 [130872.0847005009, 134544.0519981009, 170240.79825010092, 177749.87126182133], 
                                 [38.76601846343769, 23.680255727437697, 203.52549816743772, 10.763560386660904], 
                                 [197698.95199005096, 20227.524805591016, 54113.69414799101, 49239.88648778813], 
                                 [17157140.69750041, 14604304.783052409, 15326895.358772408, 15246329.029069945], 
                                 [56771.1680543401, 37580.5403261401, 16759.1174381401, 14033.1435668649], 
                                 [91.05046056733225, 12.475281837332249, 253.8297870373322, 24.857567450284964], 
                                 [578404.2021133804, 256318.32084279638, 152317.6169002684, 145072.9462009272], 
                                 [3510315.13147225, 3070707.7419922496, 2770705.06339225, 2740123.2025580625], 
                                 [63173.70177693927, 35473.38398493927, 13769.565520939266, 11407.780535212949]]
        self.assertEqual(self.evaluate_model.ideal_test_devia, ideal_test_devia_list, 
                         "The Deviation of the selected ideal functions from the test data was not computed well!")
    def test_determine_max_deviation(self):
        max_devia_indices = [[0], [3], [0], 
                            [0], [0], [0], 
                            [3], [1], [0], 
                            [0], [0], [1], 
                            [1], [0], [0], 
                            [1], [2], [0], 
                            [0], [1], [3], 
                            [3], [1], [1], 
                            [0], [0], [0], 
                            [2], [3], [0], 
                            [1], [0], [0], 
                            [0], [0], [0], 
                            [0], [0], [1], 
                            [3], [1], [3], 
                            [0], [1], [3], 
                            [3], [0], [0], 
                            [1], [0], [0], 
                            [0], [0], [0], 
                            [0], [1], [3], 
                            [0], [0], [0], 
                            [3], [0], [3], 
                            [0], [0], [3], 
                            [0], [0], [1], 
                            [0], [0], [2], 
                            [1], [0], [0], 
                            [0], [0], [3], 
                            [0], [2], [0], 
                            [0], [1], [2], 
                            [2], [0], [0], 
                            [0], [0], [1], 
                            [0], [3], [2], 
                            [0], [0], [0], 
                            [2], [0], [0], 
                            [0]]
        self.assertEqual(self.evaluate_model.max, max_devia_indices, 
                         "The indices of the maximum deviation out of the "+
                         " the ideal function deviations from the test data was "+
                         "incorrect!")
if __name__ == '__main__':
    unittest.main() 